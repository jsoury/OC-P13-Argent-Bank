@use './mixin' as mixin;
@use './variable' as variable;
@use './function' as function;

@import url(./normalize.scss);

html {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: function.color(primary);
}


.App {
  margin: 0;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.main {
  flex: 1;
}

.bg-dark {
  background-color: function.color(dark);
}

.sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important; /* 2 */
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important; /* 3 */
}

@for $i from 1 through 3 {
  h#{$i} {
    font-size: calc(2 - ($i * 0.5)) + rem;
    @include mixin.break-to(small) {
      font-size: calc(3 - ($i * 0.5)) + rem;
    }
  }
}

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: 20px;
  &.justify {
    &__center {
      justify-items: center;
    }
  }
  &.align {
    &__center {
      align-items: center;
    }
  }
}

@for $i from 1 through 12 {
  .col-xs-#{$i} {
    grid-column: span #{$i};
  }
}

@media (min-width: 768px) {
  @for $i from 1 through 12 {
    .col-sm-#{$i} {
      grid-column: span #{$i};
    }
  }
}

@media (min-width: 992px) {
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      grid-column: span #{$i};
    }
  }
}

@media (min-width: 1200px) {
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      grid-column: span #{$i};
    }
  }
}
